generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id       Int    @id @default(autoincrement())
  nome     String
  email    String @unique
  senha    String
  criadoEm DateTime @default(now())
}


model Viagem {
  id          Int       @id @default(autoincrement())
  destino     String
  motorista   String
  dataSaida   DateTime
  dataRetorno DateTime
  createdAt   DateTime  @default(now())
  despesas    Despesa[]
  vendas      Venda[]   @relation("ViagemVendas") // <== campo oposto da relação
}

model Venda {
  id        Int         @id @default(autoincrement())
  data      DateTime    @default(now())
  viagem    Viagem      @relation("ViagemVendas", fields: [viagemId], references: [id])
  viagemId  Int
  itens     ItemVenda[]
  createdAt DateTime    @default(now())
}

model Produto {
  id          Int         @id @default(autoincrement())
  nome        String
  categoria   String?
  precoCompra Float
  margemLucro Float
  precoVenda  Float
  quantidade  Int
  createdAt   DateTime    @default(now())
  itensVenda  ItemVenda[] @relation("ProdutoItens") // <== campo oposto da relação
}

model ItemVenda {
  id         Int     @id @default(autoincrement())
  venda      Venda   @relation(fields: [vendaId], references: [id])
  vendaId    Int
  produto    Produto @relation("ProdutoItens", fields: [produtoId], references: [id])
  produtoId  Int
  quantidade Int
  precoUnit  Float
}

model Despesa {
  id        Int      @id @default(autoincrement())
  tipo      String
  valor     Float
  viagem    Viagem   @relation(fields: [viagemId], references: [id])
  viagemId  Int
  createdAt DateTime @default(now())
}

model Transacao {
  id        Int      @id @default(autoincrement())
  tipo      String   
  valor     Float
  descricao String
  data      DateTime @default(now())
}
